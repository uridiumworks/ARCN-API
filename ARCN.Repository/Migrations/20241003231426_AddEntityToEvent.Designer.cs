// <auto-generated />
using System;
using ARCN.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ARCN.Repository.Migrations
{
    [DbContext(typeof(ARCNDbContext))]
    [Migration("20241003231426_AddEntityToEvent")]
    partial class AddEntityToEvent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ARCN.Domain.Entities.ARCNProgram", b =>
                {
                    b.Property<int>("ARCNProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ARCNProgramId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ARCNProgramId"));

                    b.Property<string>("Author")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Author");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("DurationPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventEndDate");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventStartDate");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Subject");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Venue");

                    b.HasKey("ARCNProgramId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_ARCNProgram", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Group")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_RoleClaims", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_UsersProfile", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("AuthorPhoneNumber")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("AuthorPhoneNumber");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishDate");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<bool?>("UseBanner")
                        .HasColumnType("bit")
                        .HasColumnName("UseBanner");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Visibility")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Visibility");

                    b.HasKey("BlogId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Blog", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.CordinationReport", b =>
                {
                    b.Property<int>("CordinationReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CordinationReportId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CordinationReportId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishDate");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.HasKey("CordinationReportId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_CordinationReport", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Entrepreneurship", b =>
                {
                    b.Property<int>("EntrepreneurshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntrepreneurshipId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntrepreneurshipId"));

                    b.Property<string>("AuthorName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("DurationPerDay")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DurationPerDay");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventEndDate");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EventStartDate");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Venue")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Visibility");

                    b.HasKey("EntrepreneurshipId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Entrepreneurship", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DurationPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("EventEndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("EventStartTime")
                        .HasColumnType("time");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Extension", b =>
                {
                    b.Property<int>("ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExtensionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtensionId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("EstablishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EstablishDate");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("JoinDate");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("LocalGovernmentAreaId")
                        .HasColumnType("int")
                        .HasColumnName("LocalGovernmentAreaId");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LogoUrl");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Website")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Website");

                    b.HasKey("ExtensionId");

                    b.HasIndex("LocalGovernmentAreaId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Extension", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.FCA", b =>
                {
                    b.Property<int>("FCAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FCAId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FCAId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("EstablishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EstablishDate");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("JoinDate");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("LocalGovernmentAreaId")
                        .HasColumnType("int")
                        .HasColumnName("LocalGovernmentAreaId");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LogoUrl");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Website")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Website");

                    b.HasKey("FCAId");

                    b.HasIndex("LocalGovernmentAreaId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_FCA", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Journals", b =>
                {
                    b.Property<int>("JournalsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JournalsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JournalsId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("AuthorPhoneNumber")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("AuthorPhoneNumber");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishDate");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<bool?>("UseBanner")
                        .HasColumnType("bit")
                        .HasColumnName("UseBanner");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Visibility")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Visibility");

                    b.HasKey("JournalsId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Journals", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.LocalGovernmentArea", b =>
                {
                    b.Property<int>("LocalGovernmentAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalGovernmentAreaId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LocalGovernmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("LocalGovernmentAreaId");

                    b.HasIndex("StateId");

                    b.ToTable("LocalGovernmentArea");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Naris", b =>
                {
                    b.Property<int>("NarisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NarisId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarisId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("EstablishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EstablishDate");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("JoinDate");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("LocalGovernmentAreaId")
                        .HasColumnType("int")
                        .HasColumnName("LocalGovernmentAreaId");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LogoUrl");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int?>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Website")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Website");

                    b.HasKey("NarisId");

                    b.HasIndex("LocalGovernmentAreaId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Naris", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.NewsLetter", b =>
                {
                    b.Property<int>("NewsLetterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NewsLetterId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsLetterId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("AuthorPhoneNumber")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("AuthorPhoneNumber");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishDate");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<bool?>("UseBanner")
                        .HasColumnType("bit")
                        .HasColumnName("UseBanner");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Visibility")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Visibility");

                    b.HasKey("NewsLetterId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_NewsLetter", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Project");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishOn");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PublisherName");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<bool?>("UseBanner")
                        .HasColumnType("bit")
                        .HasColumnName("UseBanner");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Project", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Reports", b =>
                {
                    b.Property<int>("ReportsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportsId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorName");

                    b.Property<string>("AuthorPhoneNumber")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("AuthorPhoneNumber");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishDate");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<bool?>("UseBanner")
                        .HasColumnType("bit")
                        .HasColumnName("UseBanner");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.Property<string>("Visibility")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Visibility");

                    b.HasKey("ReportsId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_Reports", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("tbl_State", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.SupervisionReport", b =>
                {
                    b.Property<int>("SupervisionReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupervisionReport");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupervisionReportId"));

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("AuthorEmail");

                    b.Property<string>("BannerUrl")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BannerUrl");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("PublishOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("PublishOn");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PublisherName");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Title");

                    b.Property<string>("UserProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserProfileId");

                    b.HasKey("SupervisionReportId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("tbl_SupervisionReport", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("tbl_Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("tbl_UserTokens", (string)null);
                });

            modelBuilder.Entity("ARCN.Domain.Entities.ARCNProgram", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("ARCNPrograms")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Blog", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Blogs")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.CordinationReport", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("CordinationReports")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Entrepreneurship", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Entrepreneurships")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Event", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Events")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Extension", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.LocalGovernmentArea", "LocalGovernmentArea")
                        .WithMany()
                        .HasForeignKey("LocalGovernmentAreaId");

                    b.HasOne("ARCN.Domain.Entities.State", "States")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Extensions")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("LocalGovernmentArea");

                    b.Navigation("States");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.FCA", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.LocalGovernmentArea", "LocalGovernmentArea")
                        .WithMany()
                        .HasForeignKey("LocalGovernmentAreaId");

                    b.HasOne("ARCN.Domain.Entities.State", "States")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("FCAs")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("LocalGovernmentArea");

                    b.Navigation("States");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Journals", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Journals")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.LocalGovernmentArea", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Naris", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.LocalGovernmentArea", "LocalGovernmentArea")
                        .WithMany("Naris")
                        .HasForeignKey("LocalGovernmentAreaId");

                    b.HasOne("ARCN.Domain.Entities.State", "States")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Naris")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("LocalGovernmentArea");

                    b.Navigation("States");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.NewsLetter", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("NewsLetters")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Project", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Projects")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.Reports", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Reports")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.SupervisionReport", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("SupervisionReports")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ARCN.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ARCN.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("ARCNPrograms");

                    b.Navigation("Blogs");

                    b.Navigation("CordinationReports");

                    b.Navigation("Entrepreneurships");

                    b.Navigation("Events");

                    b.Navigation("Extensions");

                    b.Navigation("FCAs");

                    b.Navigation("Journals");

                    b.Navigation("Naris");

                    b.Navigation("NewsLetters");

                    b.Navigation("Projects");

                    b.Navigation("Reports");

                    b.Navigation("SupervisionReports");
                });

            modelBuilder.Entity("ARCN.Domain.Entities.LocalGovernmentArea", b =>
                {
                    b.Navigation("Naris");
                });
#pragma warning restore 612, 618
        }
    }
}
